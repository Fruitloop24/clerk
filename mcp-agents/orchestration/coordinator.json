{
  "orchestrator_name": "saas-foundation-orchestrator",
  "version": "2.0.0",
  "description": "One-at-a-time agent execution with human approval between steps",
  
  "execution_mode": "ITERATIVE",
  "requires_human_approval": true,
  
  "project_context": {
    "name": "Clerk-Stripe Auth Foundation",
    "repository": "clerk",
    "architecture": "Cloudflare Workers + React (Vite) + Clerk + Stripe",
    "current_phase": "Migration & Hardening",
    "base_path": "/home/mini/Documents/clerk"
  },
  
  "current_goal": "Migrate Next.js → React on CF Pages + Improve env validation (2 security blockers already resolved)",
  
  "project_state": {
    "frontend": {
      "current": "Next.js on Vercel (has server action issues)",
      "target": "React (Vite) on CF Pages (pure static)",
      "status": "NEEDS_MIGRATION"
    },
    "backend": {
      "current": "CF Worker (2/3 security blockers resolved: CORS + webhook)",
      "target": "CF Worker, production-ready (pending: env validation timing)",
      "status": "MOSTLY_HARDENED"
    },
    "deployment": {
      "current": "Manual wrangler deploy",
      "target": "GitHub Actions auto-deploy",
      "status": "TODO"
    }
  },
  
  "available_agents": {
    "onboarding-agent": {
      "config_path": "../agents/onboarding-agent.json",
      "knowledge_bases": ["../base/project-config.json"],
      "priority": "HIGH",
      "specialty": "Project Onboarding",
      "invoke_for": ["Initial environment setup", "Dependency installation", "Local & production env config"]
    },
    "clerk-agent": {
      "config_path": "../agents/clerk-agent.json",
      "knowledge_bases": ["../base/clerk-knowledge.json","../base/project-config.json"],
      "priority": "HIGH",
      "specialty": "Clerk API and JWT configuration",
      "invoke_for": ["Retrieve Clerk keys","Configure JWT template","Populate env files","Set production secrets"]
    },
    "tiers-agent": {
      "config_path": "../agents/tiers-agent.json",
      "knowledge_bases": ["../base/tiers-knowledge.json","../base/project-config.json","../base/frontend-knowledge.json"],
      "priority": "HIGH",
      "specialty": "Tier configuration and Stripe integration",
      "invoke_for": ["Refactor backend limits","Create Stripe products & prices","Configure webhook","Export frontend KB"]
    },
    "frontend-agent": {
      "config_path": "../agents/frontend-agent.json",
      "knowledge_bases": ["../base/vite-react-tailwind.txt","../base/frontend-knowledge.json"],
      "priority": "MEDIUM",
      "specialty": "UI component generation and integration",
      "invoke_for": ["Render tier UI","Setup customer portal button","Local dev guidance","CF Pages env setup"]
    }
  },
  "execution_phases": [
    {
      "phase_id": "1_onboarding",
      "phase_name": "Onboarding",
      "agent": "onboarding-agent",
      "description": "Run the onboarding agent to configure local and production environments and install dependencies.",
      "tasks": [
        {
          "task_id": "1.1_run_onboarding",
          "name": "Run onboarding-agent end-to-end",
          "acceptance": "Local and production env configured, dependencies installed"
        }
      ]
    },
    {
      "phase_id": "2_clerk",
      "phase_name": "Clerk Configuration",
      "agent": "clerk-agent",
      "description": "Retrieve Clerk API keys, configure JWT template, update env files, and set production secrets.",
      "tasks": [
        {
          "task_id": "2.1_run_clerk",
          "name": "Run clerk-agent end-to-end",
          "acceptance": "Clerk keys set locally and in production, JWT template configured"
        }
      ]
    },
    {
      "phase_id": "3_tiers",
      "phase_name": "Tier Setup",
      "agent": "tiers-agent",
      "description": "Run the tiers-agent to refactor backend, set up Stripe products/prices/webhook, and export frontend KB.",
      "tasks": [
        {
          "task_id": "2.1_run_tiers",
          "name": "Run tiers-agent end-to-end",
          "acceptance": "Backend and frontend tier configuration complete"
        }
      ]
    },
    {
      "phase_id": "4_frontend",
      "phase_name": "Frontend Integration",
      "agent": "frontend-agent",
      "description": "Run the frontend-agent to generate and integrate UI components for tiers and customer portal.",
      "tasks": [
        {
          "task_id": "3.1_run_frontend",
          "name": "Run frontend-agent end-to-end",
          "acceptance": "Components created, app runs locally with tier UI and billing portal"
        }
      ]
    }
  ],
  "coordination_rules": {
    "never_skip_approval": "Always wait for human approval after each task",
    "read_config_first": "Always read agent config before invoking",
    "read_base_knowledge": "If agent has base_knowledge path, read that file first",
    "show_diffs": "Always show code changes before waiting for approval",
    "test_after_fix": "Run tests/verification after each fix",
    "one_task_at_a_time": "Complete one task fully before moving to next"
  },
  
  "tools_available": {
    "bash": "Execute commands (wrangler, npm, git, curl)",
    "view": "Read files (agent configs, base knowledge, source code)",
    "str_replace": "Edit existing files (fix bugs, update config)",
    "file_create": "Create new files (components, tests, workflows)"
  },
  
  "success_metrics": {
    "security_blockers_fixed": "✅ 2/3 blockers resolved (CORS, webhook secret), 1 pending (env validation timing)",
    "frontend_migrated": "React app on CF Pages, fully functional",
    "tests_passing": "E2E tests cover critical flows",
    "ci_cd_working": "Auto-deploy on push to main",
    "human_satisfaction": "User approves each step, no surprises"
  }
}
