{
  "index_ts_refactor": {
    "tier_limit_constant": {
      "before": "const FREE_TIER_LIMIT = 5;",
      "after_template": "const TIER_LIMITS = {\n  {{#each tiers}}{{name}}: {{limit}}{{#unless @last}},\n  {{/unless}}{{/each}}\n};"
    },
    "usage_check_logic": {
      "before": "if (plan === 'free' && usageData.usageCount >= FREE_TIER_LIMIT)",
      "after": "const limit = TIER_LIMITS[plan] || 0;\nif (limit !== Infinity && usageData.usageCount >= limit)"
    },
    "limit_response": {
      "before": "limit: FREE_TIER_LIMIT,",
      "after": "limit: limit,"
    },
    "usage_response": {
      "before": "limit: plan === 'free' ? FREE_TIER_LIMIT : 'unlimited',",
      "after": "limit: TIER_LIMITS[plan] === Infinity ? 'unlimited' : TIER_LIMITS[plan],"
    },
    "remaining_response": {
      "before": "remaining: plan === 'free' ? Math.max(0, FREE_TIER_LIMIT - usageData.usageCount) : 'unlimited',",
      "after": "remaining: TIER_LIMITS[plan] === Infinity ? 'unlimited' : Math.max(0, TIER_LIMITS[plan] - usageData.usageCount),"
    }
  },
  "webhook_ts_refactor": {
    "plan_update_logic": {
      "before": "publicMetadata: {\\n      plan: 'pro',\\n      stripeCustomerId: session.customer as string,\\n    },",
      "after_template": "publicMetadata: {\\n      plan: getPlanFromPriceId(session.line_items.data[0].price.id),\\n      stripeCustomerId: session.customer as string,\\n    },\\n"
    },
    "helper_function": {
      "after_template": "\\nfunction getPlanFromPriceId(priceId: string): string {\\n  const priceMap = {\\n    {{#each tiers}}{{#if priceId}}'{{priceId}}': '{{name}}',\\n    {{/if}}{{/each}}\\n  };\\n  return priceMap[priceId] || 'free';\\n}\\n"
    }
  },
  "stripe_cli": {
    "product_create": "stripe products create --name='{{tierName}} Plan'",
    "price_create": "stripe prices create --product={{productId}} --unit-amount={{price}} --currency=usd --recurring-interval=month",
    "webhook_create": "stripe webhook endpoints create --url='{{webhookUrl}}/webhook/stripe' --events='checkout.session.completed,customer.subscription.created,customer.subscription.updated,customer.subscription.deleted'",
    "endpoint_list": "stripe webhook endpoints list",
    "endpoint_delete": "stripe webhook endpoints delete {{endpointId}}",
    "listen": "stripe listen --forward-to {{localWebhookUrl}}"
  }
}
